import os
#from hazm import *
import matplotlib.pyplot as plt
import time


#***دسته بندی اسناد***           
def read_documents(directory):
    global title
    global DataTime
    documents = {}
    for filename in os.listdir(directory):
        if filename.endswith(".txt"):
            FilePath = directory + "/" + filename
            FileSize = os.path.getsize(FilePath)
            NameFormat = filename + "\n" + str(FileSize)
            title.append(NameFormat)
            DataTime.append(0)
            doc_id = os.path.splitext(filename)[0]
            with open(os.path.join(directory, filename), 'r', encoding='utf-8') as f:
                documents[doc_id] = f.read()

    return documents
# def create_optimized_index(docs): # معادل کتابخانه ای و مدلی تابع بالا
#     """ایندکس بهینه"""
#     index = defaultdict(set)
#     for doc_id, text in docs.items():
#         for word in optimize_text_processing(text):
#             index[word].add(doc_id)
#     return index


#***توکن سازی***
def tokenize(text): 
    return text.split()
#tokens = word_tokenize(normalized) # معادل کتابخانه ای و مدلی تابع بالا


#***نرمال سازی***
def normalize(
    tokens,
    remove_punctuation=True,  
    remove_numbers=True,      
    remove_symbols=True,      
    keep_spaces=True,        
    keep_english=True        
):
    global DataTime
    global ChartIndex
    start = time.time()
    arabic_to_persian = {
        'ك': 'ک', 'ي': 'ی', 'ة': 'ه', 'أ': 'ا', 'إ': 'ا',
        'ٱ': 'ا', 'ؤ': 'و', 'ً': '', 'ٌ': '', 'ٍ': '',
        'َ': '', 'ُ': '', 'ِ': '', 'ّ': '', 'ْ': '', '۟': '', '\u200C': ' '
        }
    punctuation_marks_fa = ["،", "؛", ":", ".", "؟", "!", "ـ", "-", "(", ")", "[", "]", "{", "}", "«", "»", "…"]
    persian_numbers = "۰۱۲۳۴۵۶۷۸۹"
    english_numbers = "0123456789"
    common_symbols = ["@", "#", "$", "%", "^", "&", "*", "+", "=", "|", "~", "`", "_", "\\", "/", "'", "\""]
    
    normalized_tokens = []
    for token in tokens:
        # تبدیل حروف عربی به فارسی و حذف اعراب
        for arabic, persian in arabic_to_persian.items():
            token = token.replace(arabic, persian)
    
        filtered_token = []
        for char in token:
            keep_char = True
            
            #حذف علائم نگارشی
            if remove_punctuation and char in punctuation_marks_fa: 
                keep_char = False
            # حذف اعداد
            if remove_numbers and (char in persian_numbers or char in english_numbers):
                keep_char = False
            # حذف نمادها (مثل @#)
            if remove_symbols and char in common_symbols:
                keep_char = False
            
            if keep_char:
                # حفظ حروف فارسی
                is_persian = '\u0600' <= char <= '\u06cc' 
                 # حفظ حروف انگلیسی
                is_english = ('A' <= char <= 'Z') or ('a' <= char <= 'z')
                 # حفظ فاصله
                is_space = char in (' ') if keep_spaces else False
                
                if is_persian or (is_english and keep_english) or is_space:
                    filtered_token.append(char)
                    
        #  چک کردن خالی نبودن توکن و اضافه کردن توکن فیلترشده
        final_token = ''.join(filtered_token)
        if final_token:
            # حذف فاصله‌های اضافی از ابتدا و انتها
            final_token = final_token.strip()
            if final_token:  # چک مجدد بعد از حذف فاصله‌ها
                normalized_tokens.append(final_token)
    end = time.time()
    TimeConsumed = end - start
    DataTime[ChartIndex] += TimeConsumed
    return normalized_tokens
# normalizer = Normalizer( # معادل کتابخانه ای و مدلی تابع بالا
#     remove_extra_spaces=True,
#     persian_style=True,
#     persian_numbers=True,
#     remove_diacritics=True,
#     affix_spacing=True,
#     token_based=False
# )
# normalized = normalizer.normalize(text)


#***حذف توقف واژه ها***
# Persian stopwords
PERSIAN_STOPWORDS = [
    #حرف ربط
    "و", "یا", "هم", "بلکه","ولی", "اما", "اگرچه","اگر", "چون", "چرا", "زیرا", "آنگاه",
    "پس", "بنابراین", "تا", "که", "چه", "چگونه", "چقدر", "کجا", "کی","را",
    
    # حروف اضافه
    "از", "به", "با", "در", "برای", "بر", "بی", "تا", "جز", "علیه", "غیر",
    "فوق", "وسط", "پایین", "بالا", "زیر", "روی", "جلوی", "پشت", "کنار",
    "نزد", "بین", "ازین", "ازآن", "ازاین", "ازهمین", "ازهمان", "ازهمینجا","شامل","حاوی","دارای",
    
    # ضمایر
    "من", "تو", "او", "ما", "شما", "آنها", "این", "آن", "همین", "همان",
    "خود", "خویش", "خودش", "خودت", "خودم", "خودمان", "خودتان", "خودشان",
    
    # صفات اشاره و پرسشی
    "این", "آن", "همین", "همان", "چنین", "چنان", "چه", "کدام", "چند", "چقدر","هر",
    
    # سایر کلمات پرتکرار
    "هم", "همه", "همچنین", "همین", "همان", "هیچ", "هیچ کس", "هیچ چیز",
    "یکی","برخی" ,"بعضی", "چیزی", "کسی", "جا", "وقتی", "جایی", "چیزی", "کسی",
    "راه", "کار", "داشته", "گرفته", "کرده", "شده", "آمده", "رفته",
    
    # حروف ندا و صوت
    "آهای", "آره", "نه", "بله", "خیر", "آیا", "وای", "هی",
    
    # اعداد
    "یک", "دو", "سه", "چهار", "پنج", "شش", "هفت", "هشت", "نه", "ده",
    "صفر", "اول", "دوم", "سوم", "چهارم", "پنجم", "آخر",
    
    # کلمات کوتاه
    "هم", "نیز", "فقط", "تنها", "حتما", "شاید", "بعضا", "اصلا", "تقریبا",
    "شاید", "قبلا", "الان", "همین", "همان", "هیچ", "همه", "دیگر", "بعد",
    "قبل", "کنار", "روی", "زیر", "بالا", "پایین", "وسط", "داخل", "خارج","حدودا", "حدود",

    # واحدهای اندازه‌گیری
    "میلیون", "میلیارد", "هزار", "تومن","تومان", "ریال", "دلار", "یورو", "پوند",
    "گرم", "کیلوگرم", "تن", "میلی‌گرم", "لیتر", "میلی‌لیتر", "متر", 
    "سانتی‌متر", "کیلومتر", "میلی‌متر", "اینچ", "سانتی", "مترمربع", 
    "مترمکعب", "هکتار", "کیلووات", "وات", "مگابایت", "گیگابایت", 
    "ترابایت", "بیت", "ثانیه", "دقیقه", "ساعت", "روز", "ماه", "سال",
    
    # کلمات عددی پرکاربرد
    "عدد", "نفر", "جفت", "دانه", "حلقه", "برگ", "کارتن", "جعبه", "بسته","مقدار","تعداد","مورد","موارد","نوع","طور","طوری","جور","جوری","نحوی","ی"
    
    # سایر واحدها
    "درصد", "سانتی‌گراد", "فارنهایت", "درجه", "واحد", "حجم", "وزن", "طول",

    #قید ها
    "همیشه", "هرگز", "خیلی", "بسیار", "کاملا", "اصلا", "تقریبا", "شاید",
    "احتمالا", "قطعا", "مطمئنا", "سریعا", "آهسته", "ناگهان", "بالاخره",
    "نهایتا", "اولا", "ثانیا", "واقعا", "اصولا", "اساسا", "خصوصا", "عموما",
    "معمولا", "غالبا", "دائما", "مدام", "بالعکس", "متقابلا", "مثلا", "مستقیما",
    "عمدا", "سهوا", "جبرا", "الزاما", "نسبتا","طبیعتا", "قاعدتا", "مرتبا", "پیوسته",
    "بالا", "پایین", "چپ", "راست",
    "جلو", "عقب", "کنار", "وسط", "داخل", "خارج", "روبرو", "پشت", "کنار",
    "نزدیک", "دور",

    # کلمات مقایسه ای
    "کوتاه", "بلند", "دراز", "کوچک", "کوچیک", "مایل", "کم", "کمی", "زیاد", "بیش","کمتر", "بیشتر", "متوسط",

    # رنگ ها
    "قرمز", "آبی", "سبز", "زرد", "مشکی", "سیاه", "سفید", "نارنجی", "صورتی", "بنفش", "ارغوانی", "تیره", "روشن", "کرمی", "خاکستری", "طوسی", "طلایی",
    
    # اعداد به حروف
    "یک", "دو", "سه","چهار", "پنج", "شش","هفت", "هشت", "نه","ده",
    "یازده", "دوازده", "سیزده","چهارده", "پانزده", "شانزده","هفده", "هجده", "نوزده",
    "بیست", "سی", "چهل","پنجاه", "شصت", "هفتاد","هشتاد", "نود", "صد",
    "دویست", "سیصد", "چهارصد","پانصد", "شانصد", "هفتصد","هشتصد", "نهصد", "هزار",
    "میلیون", "ملیارد",

    # ضمایر متصل
    "م", "ت", "ش", "مان", "تان", "شان",
    "ام", "ای", "اش", "ایم", "اید", "اند",
    
    # ضمایر متصل به برای
    "برایم", "برایت", "برایش", "برایمان", "برایتان", "برایشان",

    # اعداد
    "یکمین", "دومین", "سومین", "چهارمین", "پنجمین", "ششمین", "هفتمین", "هشتمین", "نهمین", "دهمین", "آخرین", "اولین",
    "یازدهمین", "دوازدهمین", "سیزدهمین","چهاردهمین", "پانزدهمین", "شانزدهمین","هفدهمین", "هجدهمین", "نوزدهمین",
    "بیستمین", "سیمین", "چهلمین","پنجاهمین", "شصتمین", "هفتادمین","هشتادمین", "نودمین", "صدمین",
    "دویستمین", "سیصدمین", "چهارصدمین","پانصدمین", "شانصدمین", "هفتصدمین","هشتصدمین", "نهصدمین", "هزارمین",
    "میلیونمین", "ملیاردمین",

    #سایر موارد
    "می","نمی", "تر", "ترین", "ای", "سایر", "غیره" , "اولیه", "ثانویه",
     "ی", "انجام", "ایا", "چیست", "کس", "مرد", "زن", "مردان", "زنان", "بچه", "کودک",
     "حتی", "توی", "درون", "بدون","اینکه", "همراه", "وارد", "بالای", "انگار",
    "آقا", "آقایان", "خانم", "بانو", "جناب", "سرکار", "بار", "وار", "پیش", "پس", "بهتر", "بدتر",
     "دوباره", "دار", "زود", "دیر"
     
] 
#from hazm import stopwords_list # معادل کتابخانه ای و مدلی تابع بالا

def remove_stopwords(tokens):
    global DataTime
    global ChartIndex
    start = time.time()   
    tokens_without_stopwords = []
    for token in tokens:
        is_not_stopword = True
        # چک کردن خود کلمات
        if token in PERSIAN_STOPWORDS:
            is_not_stopword = False
        else:
            # چک کردن تغییرات مختلف کلمات
            for stopword in PERSIAN_STOPWORDS: 
                if (token == stopword+'ی' or
                    token == stopword+'م' or
                    token == stopword+'تر' or
                    token == stopword+'ترین' or
                    token == stopword+'ها' or
                    token == stopword+'های' or
                    token == stopword+'ان'):
                    is_not_stopword = False                     
                    break
        if is_not_stopword:
            tokens_without_stopwords.append(token)
    end = time.time()
    TimeConsumed = end - start
    DataTime[ChartIndex] += TimeConsumed
    return tokens_without_stopwords
# stop_words = set(stopwords_list()) # معادل کتابخانه ای و مدلی تابع بالا
# filtered_tokens = [
#     word for word in tokens 
#     if (word not in stop_words and 
#         len(word) > 2 and 
#         not word.isdigit() and 
#         not word.startswith('_'))
# ]

#***حذف افعال***
def verb_remove(tokens):
    persian_verbs = {
        # افعال ربطی و کمکی
        'است', 'هست', 'بود', 'بوده', 'باشد', 'باشند', 'بودن', 'بودند', 'بودم', 'بودی',
        'شده', 'شدن', 'شد', 'شوند', 'شود', 'شوم', 'شوی',
        'می باشد', 'می باشند', 'می باشم', 'می باشی',
        
        # افعال داشتن
        'دارد', 'داشت', 'داشته', 'داشتن', 'داشتند', 'داشتم', 'داشتی', 'دارم', 'داری', 'دارند',
        'نداشت', 'ندارد', 'ندارم', 'نداری', 'ندارند',
        
        # افعال توانستن
        'تواند', 'توانند', 'توانم', 'توانی', 'توانید', 'توانیم',
        'می تواند', 'می توانند', 'می توانم', 'می توانی', 'می توانید', 'می توانیم',
        'نمی تواند', 'نمی توانند', 'نمی توانم', 'نمی توانی', 'نمی توانید', 'نمی توانیم',
        
        # افعال کردن
        'کرد', 'کرده', 'کردند', 'کردم', 'کردی', 'کردید', 'کردیم',
        'می کند', 'می کنند', 'می کنم', 'می کنی', 'می کنید', 'می کنیم',
        'نمی کند', 'نمی کنند', 'نمی کنم', 'نمی کنی', 'نمی کنید', 'نمی کنیم',
        
        # افعال پرداختن
        'پرداخت', 'پرداخته', 'پرداختند', 'پرداختم', 'پرداختی', 'پرداختید', 'پرداختیم',
        'بپردازند', 'بپردازد', 'بپردازم', 'بپردازی', 'بپردازید', 'بپردازیم',
        'می پردازند', 'می پردازد', 'می پردازم', 'می پردازی', 'می پردازید', 'می پردازیم',
        'نمی پردازند', 'نمی پردازد', 'نمی پردازم', 'نمی پردازی', 'نمی پردازید', 'نمی پردازیم',
        
        # افعال رفتن
        'رفت', 'رفته', 'رفتند', 'رفتم', 'رفتی', 'رفتید', 'رفتیم',
        'می رود', 'می روند', 'می روم', 'می روی', 'می روید', 'می رویم',
        'نمی رود', 'نمی روند', 'نمی روم', 'نمی روی', 'نمی روید', 'نمی رویم',
        'برو', 'بروند', 'برود', 'بروم', 'بروی', 'بروید', 'برویم',
        
        # افعال آمدن
        'آمد', 'آمده', 'آمدند', 'آمدم', 'آمدی', 'آمدید', 'آمدیم',
        'می آید', 'می آیند', 'می آیم', 'می آیی', 'می آیید', 'می آییم',
        'نمی آید', 'نمی آیند', 'نمی آیم', 'نمی آیی', 'نمی آیید', 'نمی آییم',
        'بیا', 'بیایند', 'بیاید', 'بیایم', 'بیایی', 'بیایید', 'بیاییم',
        
        # افعال گفتن
        'گفت', 'گفته', 'گفتند', 'گفتم', 'گفتی', 'گفتید', 'گفتیم',
        'می گوید', 'می گویند', 'می گویم', 'می گویی', 'می گویید', 'می گوییم',
        'نمی گوید', 'نمی گویند', 'نمی گویم', 'نمی گویی', 'نمی گویید', 'نمی گوییم',
        'بگو', 'بگویند', 'بگوید', 'بگویم', 'بگویی', 'بگویید', 'بگوییم',
        
        # افعال دیدن
        'دید', 'دیده', 'دیدند', 'دیدم', 'دیدی', 'دیدید', 'دیدیم',
        'می بیند', 'می بینند', 'می بینم', 'می بینی', 'می بینید', 'می بینیم',
        'نمی بیند', 'نمی بینند', 'نمی بینم', 'نمی بینی', 'نمی بینید', 'نمی بینیم',
        'ببین', 'ببینند', 'ببیند', 'ببینم', 'ببینی', 'ببینید', 'ببینیم',
        
        # افعال خواستن
        'خواست', 'خواسته', 'خواستند', 'خواستم', 'خواستی', 'خواستید', 'خواستیم',
        'می خواهد', 'می خواهند', 'می خواهم', 'می خواهی', 'می خواهید', 'می خواهیم',
        'نمی خواهد', 'نمی خواهند', 'نمی خواهم', 'نمی خواهی', 'نمی خواهید', 'نمی خواهیم',
        'بخواه', 'بخواهند', 'بخواهد', 'بخواهم', 'بخواهی', 'بخواهید', 'بخواهیم',
        
        # افعال نشستن
        'نشست', 'نشسته', 'نشستند', 'نشستم', 'نشستی', 'نشستید', 'نشستیم',
        'می نشیند', 'می نشینند', 'می نشینم', 'می نشینی', 'می نشینید', 'می نشینیم',
        'نمی نشیند', 'نمی نشینند', 'نمی نشینم', 'نمی نشینی', 'نمی نشینید', 'نمی نشینیم',
        'بنشین', 'بنشینند', 'بنشیند', 'بنشینم', 'بنشینی', 'بنشینید', 'بنشینیم',
        
        # افعال ایستادن
        'ایستاد', 'ایستاده', 'ایستادند', 'ایستادم', 'ایستادی', 'ایستادید', 'ایستادیم',
        'می ایستد', 'می ایستند', 'می ایستم', 'می ایستی', 'می ایستید', 'می ایستیم',
        'نمی ایستد', 'نمی ایستند', 'نمی ایستم', 'نمی ایستی', 'نمی ایستید', 'نمی ایستیم',
        'بیست', 'بیستند', 'بیستد', 'بیستم', 'بیستی', 'بیستید', 'بیستیم',
        
        # افعال دادن
        'داد', 'داده', 'دادند', 'دادم', 'دادی', 'دادید', 'دادیم',
        'می دهد', 'می دهند', 'می دهم', 'می دهی', 'می دهید', 'می دهیم',
        'نمی دهد', 'نمی دهند', 'نمی دهم', 'نمی دهی', 'نمی دهید', 'نمی دهیم',
        'بده', 'بدهند', 'بدهد', 'بدهم', 'بدهی', 'بدهید', 'بدهیم',
        
        # افعال خوردن
        'خورد', 'خورده', 'خوردند', 'خوردم', 'خوردی', 'خوردید', 'خوردیم',
        'می خورد', 'می خورند', 'می خورم', 'می خوری', 'می خورید', 'می خوریم',
        'نمی خورد', 'نمی خورند', 'نمی خورم', 'نمی خوری', 'نمی خورید', 'نمی خوریم',
        'بخور', 'بخورند', 'بخورد', 'بخورم', 'بخوری', 'بخورید', 'بخوریم',
        
        # افعال گرفتن
        'گرفت', 'گرفته', 'گرفتند', 'گرفتم', 'گرفتی', 'گرفتید', 'گرفتیم',
        'می گیرد', 'می گیرند', 'می گیرم', 'می گیری', 'می گیرید', 'می گیریم',
        'نمی گیرد', 'نمی گیرند', 'نمی گیرم', 'نمی گیری', 'نمی گیرید', 'نمی گیریم',
        'بگیر', 'بگیرند', 'بگیرد', 'بگیرم', 'بگیری', 'بگیرید', 'بگیریم',
        
        # افعال گذاشتن
        'گذاشت', 'گذاشته', 'گذاشتند', 'گذاشتم', 'گذاشتی', 'گذاشتید', 'گذاشتیم',
        'می گذارد', 'می گذارند', 'می گذارم', 'می گذاری', 'می گذارید', 'می گذاریم',
        'نمی گذارد', 'نمی گذارند', 'نمی گذارم', 'نمی گذاری', 'نمی گذارید', 'نمی گذاریم',
        'بگذار', 'بگذارند', 'بگذارد', 'بگذارم', 'بگذاری', 'بگذارید', 'بگذاریم',
        
        # افعال کشیدن
        'کشید', 'کشیده', 'کشیدند', 'کشیدم', 'کشیدی', 'کشیدید', 'کشیدیم',
        'می کشد', 'می کشند', 'می کشم', 'می کشی', 'می کشید', 'می کشیم',
        'نمی کشد', 'نمی کشند', 'نمی کشم', 'نمی کشی', 'نمی کشید', 'نمی کشیم',
        'بکش', 'بکشند', 'بکشد', 'بکشم', 'بکشی', 'بکشید', 'بکشیم',
        
        # افعال ریختن
        'ریخت', 'ریخته', 'ریختند', 'ریختم', 'ریختی', 'ریختید', 'ریختیم',
        'می ریزد', 'می ریزند', 'می ریزم', 'می ریزی', 'می ریزید', 'می ریزیم',
        'نمی ریزد', 'نمی ریزند', 'نمی ریزم', 'نمی ریزی', 'نمی ریزید', 'نمی ریزیم',
        'بریز', 'بریزند', 'بریزد', 'بریزم', 'بریزی', 'بریزید', 'بریزیم',
        
        # سایر افعال رایج
        'باید', 'بگو', 'بگیر', 'بیا', 'برو', 'بده', 'بخور', 'بنویس', 'بخوان',
        'فرمود', 'فرموده', 'فرمودند', 'فرمودم', 'فرمودی', 'فرمودید', 'فرمودیم',
        'می فرماید', 'می فرمایند', 'می فرمایم', 'می فرمایی', 'می فرمایید', 'می فرماییم',
        'رسید', 'رسیده', 'رسیدند', 'رسیدم', 'رسیدی', 'رسیدید', 'رسیدیم',
        'می رسد', 'می رسند', 'می رسیم', 'می رسی', 'می رسید', 'می رسیم',
        'پرسید', 'پرسیده', 'پرسیدند', 'پرسیدم', 'پرسیدی', 'پرسیدید', 'پرسیدیم',
        'می پرسد', 'می پرسند', 'می پرسم', 'می پرسی', 'می پرسید', 'می پرسیم',
        'گشود', 'گشوده', 'گشودند', 'گشودم', 'گشودی', 'گشودید', 'گشودیم',
        'می گشاید', 'می گشایند', 'می گشایم', 'می گشایی', 'می گشایید', 'می گشاییم',
        'ماند', 'مانده', 'ماندند', 'ماندم', 'ماندی', 'ماندید', 'ماندیم',
        'می ماند', 'می مانند', 'می مانم', 'می مانی', 'می مانید', 'می مانیم',
        'فهمید', 'فهمیده', 'فهمیدند', 'فهمیدم', 'فهمیدی', 'فهمیدید', 'فهمیدیم',
        'می فهمد', 'می فهمند', 'می فهمم', 'می فهی', 'می فهمید', 'می فهمیم',
        'انداخت', 'انداخته', 'انداختند', 'انداختم', 'انداختی', 'انداختید', 'انداختیم',
        'می اندازد', 'می اندازند', 'می اندازم', 'می اندازی', 'می اندازید', 'می اندازیم',
        'نوشت', 'نوشته', 'نوشتند', 'نوشتم', 'نوشتی', 'نوشتید', 'نوشتیم',
        'می نویسد', 'می نویسند', 'می نویسم', 'می نویسی', 'می نویسید', 'می نویسیم',
        'دانست', 'دانسته', 'دانستند', 'دانستم', 'دانستی', 'دانستید', 'دانستیم',
        'می داند', 'می دانند', 'می دانم', 'می دانی', 'می دانید', 'می دانیم',
        'ساخت', 'ساخته', 'ساختند', 'ساختم', 'ساختی', 'ساختید', 'ساختیم',
        'می سازد', 'می سازند', 'می سازم', 'می سازی', 'می سازید', 'می سازیم',
        'جست', 'جسته', 'جستند', 'جستم', 'جستی', 'جستید', 'جستیم',
        'می جوید', 'می جویند', 'می جویم', 'می جویی', 'می جویید', 'می جوییم',
        'پخت', 'پخته', 'پختند', 'پختم', 'پختی', 'پختید', 'پختیم',
        'می پزد', 'می پزند', 'می پزم', 'می پزی', 'می پزید', 'می پزیم',
        'برد', 'برده', 'بردند', 'بردم', 'بردی', 'بردید', 'بردیم',
        'می برد', 'می برند', 'می برم', 'می بری', 'می برید', 'می بریم',
        'آورد', 'آورده', 'آوردند', 'آوردم', 'آوردی', 'آوردید', 'آوردیم',
        'می آورد', 'می آورند', 'می آورم', 'می آوری', 'می آورید', 'می آوریم',
        'کشت', 'کشته', 'کشتند', 'کشتم', 'کشتی', 'کشتید', 'کشتیم',
        'می کشد', 'می کشند', 'می کشم', 'می کشی', 'می کشید', 'می کشیم',
        'زد', 'زده', 'زدند', 'زدم', 'زدی', 'زدید', 'زدیم',
        'می زند', 'می زنند', 'می زنم', 'می زنی', 'می زنید', 'می زنیم',
        'شنید', 'شنیده', 'شنیدند', 'شنیدم', 'شنیدی', 'شنیدید', 'شنیدیم',
        'می شنود', 'می شنوند', 'می شنوم', 'می شنوی', 'می شنوید', 'می شنویم',
        'خوابید', 'خوابیده', 'خوابیدند', 'خوابیدم', 'خوابیدی', 'خوابیدید', 'خوابیدیم',
        'می خوابد', 'می خوابند', 'می خوابم', 'می خوابی', 'می خوابید', 'می خوابیم',
        'راند', 'رانده', 'راندند', 'راندم', 'راندی', 'راندید', 'راندیم',
        'می راند', 'می رانند', 'می رانم', 'می رانی', 'می رانید', 'می رانیم',
        'چید', 'چیده', 'چیدند', 'چیدم', 'چیدی', 'چیدید', 'چیدیم',
        'می چیند', 'می چینند', 'می چینم', 'می چینی', 'می چینید', 'می چینیم',
        'شمرد', 'شمرده', 'شمردند', 'شمردم', 'شمردی', 'شمردید', 'شمردیم',
        'می شمرد', 'می شمارند', 'می شمارم', 'می شماری', 'می شمارید', 'می شماریم',
        'فروخت', 'فروخته', 'فروختند', 'فروختم', 'فروختی', 'فروختید', 'فروختیم',
        'می فروشد', 'می فروشند', 'می فروشم', 'می فروشی', 'می فروشید', 'می فروشیم',
        'خرید', 'خریده', 'خریدند', 'خریدم', 'خریدی', 'خریدید', 'خریدیم',
        'می خرد', 'می خرند', 'می خرم', 'می خری', 'می خرید', 'می خریم',
        'بافت', 'بافته', 'بافتند', 'بافتم', 'بافتی', 'بافتید', 'بافتیم',
        'می بافد', 'می بافند', 'می بافم', 'می بافی', 'می بافید', 'می بافیم',
        
        'می', 'نمی'
    }
    
    # ریشه‌های فعلی برای تشخیص افعال مرکب
    verb_roots = [
        'باش', 'بود', 'هست', 'است', 'نیست', # بودن
        'کن', 'کرد',  # کردن
        'رو', 'رفت',  # رفتن
        'آی', 'آمد',  # آمدن
        'گو', 'گفت',  # گفتن
        'بین', 'دید',  # دیدن
        'خواه', 'خواست',  # خواستن
        'توان', 'توانست',  # توانستن
        'نشین', 'نشست',  # نشستن
        'ایست', 'ایستاد',  # ایستادن
        'دار', 'داشت',  # داشتن
        'شو', 'شد',  # شدن
        'سپار', 'سپرد', # سپردن
        'ده', 'داد', # دادن
        'خور', 'خورد',  # خوردن
        'گیر', 'گرفت',  # گرفتن
        'گذار', 'گذاشت',  # گذاشتن
        'کش', 'کشید',  # کشیدن
        'فرمای', 'فرمود', # فرمودن
        'رس', 'رسید', # رسیدن
        'پرس', 'پرسید', # پرسیدن
        'گشا', 'گشود', # گشودن
        'مان', 'ماند', # ماندن
        'فهم', 'فهمید', # فهمیدن
        'انداز', 'انداخت', # انداختن
        "نویس",	"نوشت",	#نوشتن
        "دان",	"دانست",	#دانستن
        "ساز",	"ساخت",	#ساختن
        "جو",	"جست",	#جستن
        "پز",	"پخت",	#پختن
        "بر",	"برد",	#بردن
        "آور",	"آورد",	#آوردن
        "کش",	"کشت",	#کشتن
        "زن",	"زد",	#زدن
        "شنو",	"شنید",	#شنیدن
        "خواب",	"خوابید",	#خوابیدن
        "ران",	"راند",	#راندن
        "چین",	"چید",	#چیدن
        "شمار",	"شمرد",	#شمردن
        "فروش",	"فروخت",	#فروختن
        "خر",	"خرید",	#خریدن
        "باف",	"بافت",	#بافتن
        "پرداز", "پرداخت", #پرداختن
        "ریز", "ریخت" #ریختن
    ]
    
    # پیشوندهای فعلی
    verb_prefixes = ['می', 'نمی', 'ب', 'ن', 'بی']
    
    # پسوندهای فعلی
    verb_suffixes = ['د', 'ند', 'م', 'ی', 'ه', 'ده', 'ته', 'ن', 'یم', 'ید', 'یند', 'ان', 'ند']
    
    not_verb = []
    global DataTime
    global ChartIndex
    start = time.time() 
    for token in tokens:
        is_verb = False
        
        # چک کردن افعال کامل
        if token in persian_verbs:
            is_verb = True
        else:
            # چک کردن ترکیب پیشوند + ریشه فعل
            for prefix in verb_prefixes:
                if token.startswith(prefix):
                    remaining = token[len(prefix):]
                    # چک کردن اینکه باقی‌مانده ریشه فعل باشد
                    for root in verb_roots:
                        if remaining.startswith(root):
                            is_verb = True
                            break
                    if is_verb:
                        break
            
            # اگر هنوز فعل تشخیص داده نشده، چک کردن ریشه + پسوند
            if not is_verb:
                for root in verb_roots:
                    if token.startswith(root):
                        remaining = token[len(root):]
                        if remaining in verb_suffixes or remaining == '': 
                            is_verb = True                                 
                            break
        
        if not is_verb:
            not_verb.append(token)
    end = time.time()
    TimeConsumed = end - start
    DataTime[ChartIndex] += TimeConsumed
    return not_verb
       
            
#***ریشه یابی***
def stemmer(tokens):
    stemmed_tokens = []
    global DataTime
    global ChartIndex
    start = time.time() 
    # پسوندهای جمع
    suffixes = [
        'ها',  
        'های',
        'هایی'
    ]
    
    for token in tokens:
        # حذف پسوندهای جمع
        for suffix in suffixes:
            if token.endswith(suffix):
                token = token[:-len(suffix)]
                break
        
        # اگر کلمه خالی نشده باشد، اضافه می‌کنیم
        if token and not token.isspace():
            stemmed_tokens.append(token)
    end = time.time()
    TimeConsumed = end - start
    DataTime[ChartIndex] += TimeConsumed
    return stemmed_tokens
# stemmer = Stemmer() # معادل کتابخانه ای و مدلی تابع بالا
# lemmatizer = Lemmatizer()
# processed_words = []

# for word in filtered_tokens:
#     stem = stemmer.stem(word)
#     lemma = lemmatizer.lemmatize(word).split('#')[0]
    
#     final_word = (
#         lemma if lemma != '*' and len(lemma) > 1 
#         else stem if len(stem) > 1 
#         else word
#     )
#     processed_words.append(final_word)

# #***فهرست ارسال***
# ''' چون بعدا گفته شد که فقط دیکشنری واژگان نیاز است، این تابع کامنت شد'''
# def build_inverted_index(documents):
#     inverted_index = {}
#     for doc_id, text in documents.items():
#         tokens = tokenize(text)
#         normalized_tokens = normalize(tokens)
#         filtered_tokens = remove_stopwords(normalized_tokens)
#         stemmed_tokens = stemmer(filtered_tokens)
#         for term in stemmed_tokens:
#             if term not in inverted_index:
#                 inverted_index[term] = []
#             if doc_id not in inverted_index[term]:
#                 inverted_index[term].append(doc_id)
#     return inverted_index


if __name__ == "__main__":
    title = []
    DataTime = []
    documents_dir = "C:/Users/Pixel/Desktop/Files"  # فولدر فایل های تکست
    documents = read_documents(documents_dir)
    print("Persian Documents Loaded:", list(documents.keys()))

    unique_terms = []
    seen_terms = set()
    
    #پردازش هر سند به ترتیب
    ChartIndex = 0
    for doc_id, text in documents.items():
        tokens = tokenize(text)
        normalized_tokens = normalize(tokens)
        filtered_tokens = remove_stopwords(normalized_tokens)
        noVerb_tokens = verb_remove(filtered_tokens)
        stemmed_tokens = stemmer(noVerb_tokens)
        final_tokens = remove_stopwords(stemmed_tokens)
        ChartIndex += 1
        # اضافه کردن کلمات جدید به ترتیب ظاهر شدن
        for term in final_tokens:
            if term not in seen_terms and len(term) > 1:  # حذف کلمات تک حرفی
                # حذف فاصله‌های اضافی از ابتدا و انتها
                clean_term = term.strip()
                if len(clean_term) > 1:  # چک مجدد طول بعد از حذف فاصله‌ها
                    # چک نهایی برای اطمینان از اینکه کلمه استاپ ورد نیست
                    is_stopword = False
                    for stopword in PERSIAN_STOPWORDS:
                        if clean_term == stopword:
                            is_stopword = True
                            break
                    if not is_stopword:
                        unique_terms.append(clean_term)
                        seen_terms.add(clean_term)
                        
    #نوشتن کلمات در فایل با حفظ ترتیب اصلی
    with open('C:/Users/Pixel/Desktop/dict10.txt', 'w', encoding='utf-8') as file: #فایلی که دیکشنری درآن نوشته می شود.
        for term in unique_terms:
            file.write(term + '\n')
plt.bar(title, DataTime)
plt.savefig('Chart.png')
    # inverted_index = build_inverted_index(documents)
    # with open('C:/Users/Pixel/Desktop/dict9.txt', 'w', encoding='utf-8') as file:
    #     for term, doc_ids in inverted_index.items():
    #         file.write(f"{term}: {doc_ids}\n")